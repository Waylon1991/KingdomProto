// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.1
// source: common/common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LoginType 登录类型
type LoginType int32

const (
	LoginType_guest   LoginType = 0 //游客登录
	LoginType_UserPwd LoginType = 1 //用户密码登录
)

// Enum value maps for LoginType.
var (
	LoginType_name = map[int32]string{
		0: "guest",
		1: "UserPwd",
	}
	LoginType_value = map[string]int32{
		"guest":   0,
		"UserPwd": 1,
	}
)

func (x LoginType) Enum() *LoginType {
	p := new(LoginType)
	*p = x
	return p
}

func (x LoginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[0].Descriptor()
}

func (LoginType) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[0]
}

func (x LoginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginType.Descriptor instead.
func (LoginType) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{0}
}

// ProtocolType 协议类型
type ProtocolType int32

const (
	ProtocolType_ws  ProtocolType = 0 //web socket
	ProtocolType_tcp ProtocolType = 1 //tcp
)

// Enum value maps for ProtocolType.
var (
	ProtocolType_name = map[int32]string{
		0: "ws",
		1: "tcp",
	}
	ProtocolType_value = map[string]int32{
		"ws":  0,
		"tcp": 1,
	}
)

func (x ProtocolType) Enum() *ProtocolType {
	p := new(ProtocolType)
	*p = x
	return p
}

func (x ProtocolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtocolType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[1].Descriptor()
}

func (ProtocolType) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[1]
}

func (x ProtocolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtocolType.Descriptor instead.
func (ProtocolType) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{1}
}

// RoomMode 房间模式
type RoomMode int32

const (
	RoomMode_one_vs_one     RoomMode = 0 //1 v 1
	RoomMode_chaos_faction  RoomMode = 1 //大乱斗
	RoomMode_three_vs_three RoomMode = 2 //3 v 3
	RoomMode_five_vs_five   RoomMode = 3 //5 v 5
)

// Enum value maps for RoomMode.
var (
	RoomMode_name = map[int32]string{
		0: "one_vs_one",
		1: "chaos_faction",
		2: "three_vs_three",
		3: "five_vs_five",
	}
	RoomMode_value = map[string]int32{
		"one_vs_one":     0,
		"chaos_faction":  1,
		"three_vs_three": 2,
		"five_vs_five":   3,
	}
)

func (x RoomMode) Enum() *RoomMode {
	p := new(RoomMode)
	*p = x
	return p
}

func (x RoomMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[2].Descriptor()
}

func (RoomMode) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[2]
}

func (x RoomMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomMode.Descriptor instead.
func (RoomMode) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{2}
}

// HeroMatchState 英雄匹配中状态
type HeroMatchState int32

const (
	HeroMatchState_free     HeroMatchState = 0 //空闲
	HeroMatchState_selected HeroMatchState = 1 //已选
	HeroMatchState_disabled HeroMatchState = 2 //禁用
)

// Enum value maps for HeroMatchState.
var (
	HeroMatchState_name = map[int32]string{
		0: "free",
		1: "selected",
		2: "disabled",
	}
	HeroMatchState_value = map[string]int32{
		"free":     0,
		"selected": 1,
		"disabled": 2,
	}
)

func (x HeroMatchState) Enum() *HeroMatchState {
	p := new(HeroMatchState)
	*p = x
	return p
}

func (x HeroMatchState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeroMatchState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[3].Descriptor()
}

func (HeroMatchState) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[3]
}

func (x HeroMatchState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeroMatchState.Descriptor instead.
func (HeroMatchState) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{3}
}

// CardState 卡牌状态
type CardState int32

const (
	CardState_card_enabled  CardState = 0 //可用
	CardState_card_disabled CardState = 1 //不可用
)

// Enum value maps for CardState.
var (
	CardState_name = map[int32]string{
		0: "card_enabled",
		1: "card_disabled",
	}
	CardState_value = map[string]int32{
		"card_enabled":  0,
		"card_disabled": 1,
	}
)

func (x CardState) Enum() *CardState {
	p := new(CardState)
	*p = x
	return p
}

func (x CardState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[4].Descriptor()
}

func (CardState) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[4]
}

func (x CardState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardState.Descriptor instead.
func (CardState) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{4}
}

// BufState buf状态
type BufState int32

const (
	BufState_buf_enabled  BufState = 0 //可用
	BufState_buf_disabled BufState = 1 //不可用
)

// Enum value maps for BufState.
var (
	BufState_name = map[int32]string{
		0: "buf_enabled",
		1: "buf_disabled",
	}
	BufState_value = map[string]int32{
		"buf_enabled":  0,
		"buf_disabled": 1,
	}
)

func (x BufState) Enum() *BufState {
	p := new(BufState)
	*p = x
	return p
}

func (x BufState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BufState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[5].Descriptor()
}

func (BufState) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[5]
}

func (x BufState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BufState.Descriptor instead.
func (BufState) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{5}
}

// SkillState buf状态
type SkillState int32

const (
	SkillState_skill_enabled  SkillState = 0 //可用
	SkillState_skill_disabled SkillState = 1 //不可用
)

// Enum value maps for SkillState.
var (
	SkillState_name = map[int32]string{
		0: "skill_enabled",
		1: "skill_disabled",
	}
	SkillState_value = map[string]int32{
		"skill_enabled":  0,
		"skill_disabled": 1,
	}
)

func (x SkillState) Enum() *SkillState {
	p := new(SkillState)
	*p = x
	return p
}

func (x SkillState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SkillState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[6].Descriptor()
}

func (SkillState) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[6]
}

func (x SkillState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SkillState.Descriptor instead.
func (SkillState) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{6}
}

// DiceFaceNumber 筛子数字
type DiceFaceNumber int32

const (
	DiceFaceNumber_dfn_dice_null DiceFaceNumber = 0 //非法面值
	DiceFaceNumber_dfn_dice_1    DiceFaceNumber = 1
	DiceFaceNumber_dfn_dice_2    DiceFaceNumber = 2
	DiceFaceNumber_dfn_dice_3    DiceFaceNumber = 3
	DiceFaceNumber_dfn_dice_4    DiceFaceNumber = 4
	DiceFaceNumber_dfn_dice_5    DiceFaceNumber = 5
	DiceFaceNumber_dfn_dice_6    DiceFaceNumber = 6
)

// Enum value maps for DiceFaceNumber.
var (
	DiceFaceNumber_name = map[int32]string{
		0: "dfn_dice_null",
		1: "dfn_dice_1",
		2: "dfn_dice_2",
		3: "dfn_dice_3",
		4: "dfn_dice_4",
		5: "dfn_dice_5",
		6: "dfn_dice_6",
	}
	DiceFaceNumber_value = map[string]int32{
		"dfn_dice_null": 0,
		"dfn_dice_1":    1,
		"dfn_dice_2":    2,
		"dfn_dice_3":    3,
		"dfn_dice_4":    4,
		"dfn_dice_5":    5,
		"dfn_dice_6":    6,
	}
)

func (x DiceFaceNumber) Enum() *DiceFaceNumber {
	p := new(DiceFaceNumber)
	*p = x
	return p
}

func (x DiceFaceNumber) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiceFaceNumber) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[7].Descriptor()
}

func (DiceFaceNumber) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[7]
}

func (x DiceFaceNumber) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiceFaceNumber.Descriptor instead.
func (DiceFaceNumber) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{7}
}

// DiceFacePic 筛子图案
type DiceFacePic int32

const (
	DiceFacePic_dfn_pic_null DiceFacePic = 0 //非法面值
	DiceFacePic_dfn_pic_A    DiceFacePic = 1
	DiceFacePic_dfn_pic_B    DiceFacePic = 2
	DiceFacePic_dfn_pic_C    DiceFacePic = 3
)

// Enum value maps for DiceFacePic.
var (
	DiceFacePic_name = map[int32]string{
		0: "dfn_pic_null",
		1: "dfn_pic_A",
		2: "dfn_pic_B",
		3: "dfn_pic_C",
	}
	DiceFacePic_value = map[string]int32{
		"dfn_pic_null": 0,
		"dfn_pic_A":    1,
		"dfn_pic_B":    2,
		"dfn_pic_C":    3,
	}
)

func (x DiceFacePic) Enum() *DiceFacePic {
	p := new(DiceFacePic)
	*p = x
	return p
}

func (x DiceFacePic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiceFacePic) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[8].Descriptor()
}

func (DiceFacePic) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[8]
}

func (x DiceFacePic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiceFacePic.Descriptor instead.
func (DiceFacePic) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{8}
}

// GameStage 游戏阶段
type GameStage int32

const (
	GameStage_gs_keep      GameStage = 0 //维持阶段
	GameStage_gs_income    GameStage = 1 //收入阶段
	GameStage_gs_main      GameStage = 2 //主要阶段
	GameStage_gs_offensive GameStage = 3 //进攻投掷阶段
	GameStage_gs_enemy     GameStage = 4 //索敌投掷阶段
	GameStage_gs_defensive GameStage = 5 //防御阶段
	GameStage_gs_finish    GameStage = 6 //收尾阶段
)

// Enum value maps for GameStage.
var (
	GameStage_name = map[int32]string{
		0: "gs_keep",
		1: "gs_income",
		2: "gs_main",
		3: "gs_offensive",
		4: "gs_enemy",
		5: "gs_defensive",
		6: "gs_finish",
	}
	GameStage_value = map[string]int32{
		"gs_keep":      0,
		"gs_income":    1,
		"gs_main":      2,
		"gs_offensive": 3,
		"gs_enemy":     4,
		"gs_defensive": 5,
		"gs_finish":    6,
	}
)

func (x GameStage) Enum() *GameStage {
	p := new(GameStage)
	*p = x
	return p
}

func (x GameStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStage) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[9].Descriptor()
}

func (GameStage) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[9]
}

func (x GameStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStage.Descriptor instead.
func (GameStage) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{9}
}

// OperateKind 操作种类
type OperateKind int32

const (
	OperateKind_ok_null        OperateKind = 0 //空操作
	OperateKind_ok_skip        OperateKind = 1 //跳过该阶段
	OperateKind_ok_out_card    OperateKind = 2 //打出卡牌
	OperateKind_ok_sell_card   OperateKind = 3 //出售卡牌
	OperateKind_ok_roll_dice   OperateKind = 4 //掷骰子
	OperateKind_ok_send_skill  OperateKind = 5 //发动技能
	OperateKind_ok_trigger_buf OperateKind = 6 //触发buf
)

// Enum value maps for OperateKind.
var (
	OperateKind_name = map[int32]string{
		0: "ok_null",
		1: "ok_skip",
		2: "ok_out_card",
		3: "ok_sell_card",
		4: "ok_roll_dice",
		5: "ok_send_skill",
		6: "ok_trigger_buf",
	}
	OperateKind_value = map[string]int32{
		"ok_null":        0,
		"ok_skip":        1,
		"ok_out_card":    2,
		"ok_sell_card":   3,
		"ok_roll_dice":   4,
		"ok_send_skill":  5,
		"ok_trigger_buf": 6,
	}
)

func (x OperateKind) Enum() *OperateKind {
	p := new(OperateKind)
	*p = x
	return p
}

func (x OperateKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperateKind) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[10].Descriptor()
}

func (OperateKind) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[10]
}

func (x OperateKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperateKind.Descriptor instead.
func (OperateKind) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{10}
}

// User 用户结构体
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Hero 英雄
type Hero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId int32          `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	State  HeroMatchState `protobuf:"varint,2,opt,name=state,proto3,enum=protocol.common.HeroMatchState" json:"state,omitempty"`
}

func (x *Hero) Reset() {
	*x = Hero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hero) ProtoMessage() {}

func (x *Hero) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hero.ProtoReflect.Descriptor instead.
func (*Hero) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{1}
}

func (x *Hero) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *Hero) GetState() HeroMatchState {
	if x != nil {
		return x.State
	}
	return HeroMatchState_free
}

// SelectInfo 选择的信息
type SelectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户信息
	HeroId int32 `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"` //英雄信息
}

func (x *SelectInfo) Reset() {
	*x = SelectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectInfo) ProtoMessage() {}

func (x *SelectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectInfo.ProtoReflect.Descriptor instead.
func (*SelectInfo) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{2}
}

func (x *SelectInfo) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SelectInfo) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

// RoomCard 卡牌
type RoomCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //卡牌id
	State CardState `protobuf:"varint,2,opt,name=state,proto3,enum=protocol.common.CardState" json:"state,omitempty"` //卡牌状态
}

func (x *RoomCard) Reset() {
	*x = RoomCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomCard) ProtoMessage() {}

func (x *RoomCard) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomCard.ProtoReflect.Descriptor instead.
func (*RoomCard) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{3}
}

func (x *RoomCard) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomCard) GetState() CardState {
	if x != nil {
		return x.State
	}
	return CardState_card_enabled
}

// RoomBuf buf
type RoomBuf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     //buf id
	Num   int32    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                                   //buf 个数
	State BufState `protobuf:"varint,3,opt,name=state,proto3,enum=protocol.common.BufState" json:"state,omitempty"` //buf 状态
}

func (x *RoomBuf) Reset() {
	*x = RoomBuf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomBuf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomBuf) ProtoMessage() {}

func (x *RoomBuf) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomBuf.ProtoReflect.Descriptor instead.
func (*RoomBuf) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{4}
}

func (x *RoomBuf) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomBuf) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *RoomBuf) GetState() BufState {
	if x != nil {
		return x.State
	}
	return BufState_buf_enabled
}

//skill
type RoomSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                       //技能 id
	State SkillState `protobuf:"varint,2,opt,name=state,proto3,enum=protocol.common.SkillState" json:"state,omitempty"` //技能状态
}

func (x *RoomSkill) Reset() {
	*x = RoomSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomSkill) ProtoMessage() {}

func (x *RoomSkill) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomSkill.ProtoReflect.Descriptor instead.
func (*RoomSkill) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{5}
}

func (x *RoomSkill) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomSkill) GetState() SkillState {
	if x != nil {
		return x.State
	}
	return SkillState_skill_enabled
}

// DiceFace 筛子面
type DiceFace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num DiceFaceNumber `protobuf:"varint,1,opt,name=num,proto3,enum=protocol.common.DiceFaceNumber" json:"num,omitempty"`
	Pic DiceFacePic    `protobuf:"varint,2,opt,name=pic,proto3,enum=protocol.common.DiceFacePic" json:"pic,omitempty"`
}

func (x *DiceFace) Reset() {
	*x = DiceFace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiceFace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiceFace) ProtoMessage() {}

func (x *DiceFace) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiceFace.ProtoReflect.Descriptor instead.
func (*DiceFace) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{6}
}

func (x *DiceFace) GetNum() DiceFaceNumber {
	if x != nil {
		return x.Num
	}
	return DiceFaceNumber_dfn_dice_null
}

func (x *DiceFace) GetPic() DiceFacePic {
	if x != nil {
		return x.Pic
	}
	return DiceFacePic_dfn_pic_null
}

// RoomDice 筛子
type RoomDice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Df []*DiceFace `protobuf:"bytes,1,rep,name=df,proto3" json:"df,omitempty"` //筛子结果
}

func (x *RoomDice) Reset() {
	*x = RoomDice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomDice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomDice) ProtoMessage() {}

func (x *RoomDice) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomDice.ProtoReflect.Descriptor instead.
func (*RoomDice) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{7}
}

func (x *RoomDice) GetDf() []*DiceFace {
	if x != nil {
		return x.Df
	}
	return nil
}

//玩家信息
type RoomPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32        `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`        //玩家id
	Seat     int32        `protobuf:"varint,11,opt,name=seat,proto3" json:"seat,omitempty"`                         //玩家座位号
	HeroId   int32        `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`        //英雄id
	Blood    int32        `protobuf:"varint,3,opt,name=blood,proto3" json:"blood,omitempty"`                        //血量
	Cp       int32        `protobuf:"varint,4,opt,name=cp,proto3" json:"cp,omitempty"`                              //战斗点数
	Cards    []*RoomCard  `protobuf:"bytes,5,rep,name=cards,proto3" json:"cards,omitempty"`                         //手牌列表
	Bufs     []*RoomBuf   `protobuf:"bytes,6,rep,name=bufs,proto3" json:"bufs,omitempty"`                           //buf列表
	Skills   []*RoomSkill `protobuf:"bytes,7,rep,name=skills,proto3" json:"skills,omitempty"`                       //技能列表
	Dices    []*RoomDice  `protobuf:"bytes,8,rep,name=dices,proto3" json:"dices,omitempty"`                         //骰子列表
	LeftCard int32        `protobuf:"varint,9,opt,name=left_card,json=leftCard,proto3" json:"left_card,omitempty"`  //剩余牌数
	LeftTime int32        `protobuf:"varint,10,opt,name=left_time,json=leftTime,proto3" json:"left_time,omitempty"` //剩余时间（s）
}

func (x *RoomPlayerInfo) Reset() {
	*x = RoomPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPlayerInfo) ProtoMessage() {}

func (x *RoomPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPlayerInfo.ProtoReflect.Descriptor instead.
func (*RoomPlayerInfo) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{8}
}

func (x *RoomPlayerInfo) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RoomPlayerInfo) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *RoomPlayerInfo) GetHeroId() int32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *RoomPlayerInfo) GetBlood() int32 {
	if x != nil {
		return x.Blood
	}
	return 0
}

func (x *RoomPlayerInfo) GetCp() int32 {
	if x != nil {
		return x.Cp
	}
	return 0
}

func (x *RoomPlayerInfo) GetCards() []*RoomCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *RoomPlayerInfo) GetBufs() []*RoomBuf {
	if x != nil {
		return x.Bufs
	}
	return nil
}

func (x *RoomPlayerInfo) GetSkills() []*RoomSkill {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *RoomPlayerInfo) GetDices() []*RoomDice {
	if x != nil {
		return x.Dices
	}
	return nil
}

func (x *RoomPlayerInfo) GetLeftCard() int32 {
	if x != nil {
		return x.LeftCard
	}
	return 0
}

func (x *RoomPlayerInfo) GetLeftTime() int32 {
	if x != nil {
		return x.LeftTime
	}
	return 0
}

// OperateInfo 操作信息
type OperateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurSeat    int32     `protobuf:"varint,1,opt,name=cur_seat,json=curSeat,proto3" json:"cur_seat,omitempty"`                 //当前操作的座位号
	EnemySeats []int32   `protobuf:"varint,2,rep,packed,name=enemy_seats,json=enemySeats,proto3" json:"enemy_seats,omitempty"` //被攻击的玩家座位号
	Stage      GameStage `protobuf:"varint,3,opt,name=stage,proto3,enum=protocol.common.GameStage" json:"stage,omitempty"`     //当前阶段
}

func (x *OperateInfo) Reset() {
	*x = OperateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateInfo) ProtoMessage() {}

func (x *OperateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateInfo.ProtoReflect.Descriptor instead.
func (*OperateInfo) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{9}
}

func (x *OperateInfo) GetCurSeat() int32 {
	if x != nil {
		return x.CurSeat
	}
	return 0
}

func (x *OperateInfo) GetEnemySeats() []int32 {
	if x != nil {
		return x.EnemySeats
	}
	return nil
}

func (x *OperateInfo) GetStage() GameStage {
	if x != nil {
		return x.Stage
	}
	return GameStage_gs_keep
}

// OperateRecord 操作记录
type OperateRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32        `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`                                //操作序号
	Info  *OperateInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`                                   //当前操作信息
	Kind  OperateKind  `protobuf:"varint,3,opt,name=kind,proto3,enum=protocol.common.OperateKind" json:"kind,omitempty"` //操作种类
	Card  *RoomCard    `protobuf:"bytes,4,opt,name=card,proto3" json:"card,omitempty"`                                   //出的牌
	Skill *RoomSkill   `protobuf:"bytes,5,opt,name=skill,proto3" json:"skill,omitempty"`                                 //技能
	Buf   *RoomBuf     `protobuf:"bytes,6,opt,name=buf,proto3" json:"buf,omitempty"`                                     //buf
	Dice  *RoomDice    `protobuf:"bytes,7,opt,name=dice,proto3" json:"dice,omitempty"`                                   //骰子
}

func (x *OperateRecord) Reset() {
	*x = OperateRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateRecord) ProtoMessage() {}

func (x *OperateRecord) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateRecord.ProtoReflect.Descriptor instead.
func (*OperateRecord) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{10}
}

func (x *OperateRecord) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *OperateRecord) GetInfo() *OperateInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *OperateRecord) GetKind() OperateKind {
	if x != nil {
		return x.Kind
	}
	return OperateKind_ok_null
}

func (x *OperateRecord) GetCard() *RoomCard {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *OperateRecord) GetSkill() *RoomSkill {
	if x != nil {
		return x.Skill
	}
	return nil
}

func (x *OperateRecord) GetBuf() *RoomBuf {
	if x != nil {
		return x.Buf
	}
	return nil
}

func (x *OperateRecord) GetDice() *RoomDice {
	if x != nil {
		return x.Dice
	}
	return nil
}

// RewardBall 奖励球
type RewardBall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurRound   int32 `protobuf:"varint,1,opt,name=cur_round,json=curRound,proto3" json:"cur_round,omitempty"`       //当前回合数
	TotalRound int32 `protobuf:"varint,2,opt,name=total_round,json=totalRound,proto3" json:"total_round,omitempty"` //满回合数
}

func (x *RewardBall) Reset() {
	*x = RewardBall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardBall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardBall) ProtoMessage() {}

func (x *RewardBall) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardBall.ProtoReflect.Descriptor instead.
func (*RewardBall) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{11}
}

func (x *RewardBall) GetCurRound() int32 {
	if x != nil {
		return x.CurRound
	}
	return 0
}

func (x *RewardBall) GetTotalRound() int32 {
	if x != nil {
		return x.TotalRound
	}
	return 0
}

var File_common_common_proto protoreflect.FileDescriptor

var file_common_common_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x1f, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x04, 0x48, 0x65, 0x72, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x3e, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x22,
	0x4c, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5c, 0x0a,
	0x07, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x75, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x66, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4e, 0x0a, 0x09, 0x52,
	0x6f, 0x6f, 0x6d, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x08, 0x44,
	0x69, 0x63, 0x65, 0x46, 0x61, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x46, 0x61, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x03, 0x70, 0x69,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x46, 0x61,
	0x63, 0x65, 0x50, 0x69, 0x63, 0x52, 0x03, 0x70, 0x69, 0x63, 0x22, 0x35, 0x0a, 0x08, 0x52, 0x6f,
	0x6f, 0x6d, 0x44, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x02, 0x64, 0x66, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x63, 0x65, 0x46, 0x61, 0x63, 0x65, 0x52, 0x02, 0x64,
	0x66, 0x22, 0xfa, 0x02, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x61,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x63, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x70,
	0x12, 0x2f, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x2c, 0x0a, 0x04, 0x62, 0x75, 0x66, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x75, 0x66, 0x52, 0x04, 0x62, 0x75, 0x66, 0x73, 0x12,
	0x32, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x69, 0x63, 0x65, 0x52, 0x05, 0x64,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7b,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x65, 0x6d,
	0x79, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x65,
	0x6e, 0x65, 0x6d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0xc5, 0x02, 0x0a, 0x0d,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x2a, 0x0a, 0x03, 0x62, 0x75, 0x66, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x75, 0x66, 0x52,
	0x03, 0x62, 0x75, 0x66, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x69, 0x63, 0x65, 0x52, 0x04, 0x64,
	0x69, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6c,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x2a,
	0x23, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x77, 0x64, 0x10, 0x01, 0x2a, 0x1f, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x77, 0x73, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x74, 0x63, 0x70, 0x10, 0x01, 0x2a, 0x53, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x5f, 0x76, 0x73, 0x5f, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6f, 0x73, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x76, 0x73,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x66, 0x69, 0x76, 0x65,
	0x5f, 0x76, 0x73, 0x5f, 0x66, 0x69, 0x76, 0x65, 0x10, 0x03, 0x2a, 0x36, 0x0a, 0x0e, 0x48, 0x65,
	0x72, 0x6f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x66, 0x72, 0x65, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x02, 0x2a, 0x30, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x10, 0x01, 0x2a, 0x2d, 0x0a, 0x08, 0x42, 0x75, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x62, 0x75, 0x66, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x62, 0x75, 0x66, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x10, 0x01, 0x2a, 0x33, 0x0a, 0x0a, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x2a, 0x83, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x63,
	0x65, 0x46, 0x61, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x11, 0x0a, 0x0d, 0x64,
	0x66, 0x6e, 0x5f, 0x64, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x64, 0x66, 0x6e, 0x5f, 0x64, 0x69, 0x63, 0x65, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x64, 0x66, 0x6e, 0x5f, 0x64, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x64, 0x66, 0x6e, 0x5f, 0x64, 0x69, 0x63, 0x65, 0x5f, 0x33, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x64, 0x66, 0x6e, 0x5f, 0x64, 0x69, 0x63, 0x65, 0x5f, 0x34, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x64, 0x66, 0x6e, 0x5f, 0x64, 0x69, 0x63, 0x65, 0x5f, 0x35, 0x10, 0x05, 0x12, 0x0e,
	0x0a, 0x0a, 0x64, 0x66, 0x6e, 0x5f, 0x64, 0x69, 0x63, 0x65, 0x5f, 0x36, 0x10, 0x06, 0x2a, 0x4c,
	0x0a, 0x0b, 0x44, 0x69, 0x63, 0x65, 0x46, 0x61, 0x63, 0x65, 0x50, 0x69, 0x63, 0x12, 0x10, 0x0a,
	0x0c, 0x64, 0x66, 0x6e, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x64, 0x66, 0x6e, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x41, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x64, 0x66, 0x6e, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x42, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x64, 0x66, 0x6e, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x43, 0x10, 0x03, 0x2a, 0x75, 0x0a, 0x09,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x67, 0x73, 0x5f,
	0x6b, 0x65, 0x65, 0x70, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x67, 0x73, 0x5f, 0x69, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x67, 0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6e,
	0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x67, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x6e, 0x73, 0x69,
	0x76, 0x65, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x67, 0x73, 0x5f, 0x65, 0x6e, 0x65, 0x6d, 0x79,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x67, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x69,
	0x76, 0x65, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x67, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x10, 0x06, 0x2a, 0x83, 0x01, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x6f, 0x6b, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x6f, 0x6b, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x6f, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x6f, 0x6b, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x10, 0x03,
	0x12, 0x10, 0x0a, 0x0c, 0x6f, 0x6b, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x64, 0x69, 0x63, 0x65,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x6f, 0x6b, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x6f, 0x6b, 0x5f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x66, 0x10, 0x06, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x61, 0x79, 0x6c, 0x6f, 0x6e, 0x31, 0x39,
	0x39, 0x31, 0x2f, 0x4b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_common_proto_rawDescOnce sync.Once
	file_common_common_proto_rawDescData = file_common_common_proto_rawDesc
)

func file_common_common_proto_rawDescGZIP() []byte {
	file_common_common_proto_rawDescOnce.Do(func() {
		file_common_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_common_proto_rawDescData)
	})
	return file_common_common_proto_rawDescData
}

var file_common_common_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_common_common_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_common_common_proto_goTypes = []interface{}{
	(LoginType)(0),         // 0: protocol.common.LoginType
	(ProtocolType)(0),      // 1: protocol.common.ProtocolType
	(RoomMode)(0),          // 2: protocol.common.RoomMode
	(HeroMatchState)(0),    // 3: protocol.common.HeroMatchState
	(CardState)(0),         // 4: protocol.common.CardState
	(BufState)(0),          // 5: protocol.common.BufState
	(SkillState)(0),        // 6: protocol.common.SkillState
	(DiceFaceNumber)(0),    // 7: protocol.common.DiceFaceNumber
	(DiceFacePic)(0),       // 8: protocol.common.DiceFacePic
	(GameStage)(0),         // 9: protocol.common.GameStage
	(OperateKind)(0),       // 10: protocol.common.OperateKind
	(*User)(nil),           // 11: protocol.common.User
	(*Hero)(nil),           // 12: protocol.common.Hero
	(*SelectInfo)(nil),     // 13: protocol.common.SelectInfo
	(*RoomCard)(nil),       // 14: protocol.common.RoomCard
	(*RoomBuf)(nil),        // 15: protocol.common.RoomBuf
	(*RoomSkill)(nil),      // 16: protocol.common.RoomSkill
	(*DiceFace)(nil),       // 17: protocol.common.DiceFace
	(*RoomDice)(nil),       // 18: protocol.common.RoomDice
	(*RoomPlayerInfo)(nil), // 19: protocol.common.RoomPlayerInfo
	(*OperateInfo)(nil),    // 20: protocol.common.OperateInfo
	(*OperateRecord)(nil),  // 21: protocol.common.OperateRecord
	(*RewardBall)(nil),     // 22: protocol.common.RewardBall
}
var file_common_common_proto_depIdxs = []int32{
	3,  // 0: protocol.common.Hero.state:type_name -> protocol.common.HeroMatchState
	4,  // 1: protocol.common.RoomCard.state:type_name -> protocol.common.CardState
	5,  // 2: protocol.common.RoomBuf.state:type_name -> protocol.common.BufState
	6,  // 3: protocol.common.RoomSkill.state:type_name -> protocol.common.SkillState
	7,  // 4: protocol.common.DiceFace.num:type_name -> protocol.common.DiceFaceNumber
	8,  // 5: protocol.common.DiceFace.pic:type_name -> protocol.common.DiceFacePic
	17, // 6: protocol.common.RoomDice.df:type_name -> protocol.common.DiceFace
	14, // 7: protocol.common.RoomPlayerInfo.cards:type_name -> protocol.common.RoomCard
	15, // 8: protocol.common.RoomPlayerInfo.bufs:type_name -> protocol.common.RoomBuf
	16, // 9: protocol.common.RoomPlayerInfo.skills:type_name -> protocol.common.RoomSkill
	18, // 10: protocol.common.RoomPlayerInfo.dices:type_name -> protocol.common.RoomDice
	9,  // 11: protocol.common.OperateInfo.stage:type_name -> protocol.common.GameStage
	20, // 12: protocol.common.OperateRecord.info:type_name -> protocol.common.OperateInfo
	10, // 13: protocol.common.OperateRecord.kind:type_name -> protocol.common.OperateKind
	14, // 14: protocol.common.OperateRecord.card:type_name -> protocol.common.RoomCard
	16, // 15: protocol.common.OperateRecord.skill:type_name -> protocol.common.RoomSkill
	15, // 16: protocol.common.OperateRecord.buf:type_name -> protocol.common.RoomBuf
	18, // 17: protocol.common.OperateRecord.dice:type_name -> protocol.common.RoomDice
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_common_common_proto_init() }
func file_common_common_proto_init() {
	if File_common_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomBuf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiceFace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomDice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardBall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_common_proto_rawDesc,
			NumEnums:      11,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_common_proto_goTypes,
		DependencyIndexes: file_common_common_proto_depIdxs,
		EnumInfos:         file_common_common_proto_enumTypes,
		MessageInfos:      file_common_common_proto_msgTypes,
	}.Build()
	File_common_common_proto = out.File
	file_common_common_proto_rawDesc = nil
	file_common_common_proto_goTypes = nil
	file_common_common_proto_depIdxs = nil
}

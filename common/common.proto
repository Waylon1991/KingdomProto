syntax = "proto3";

package protocol.common;

option go_package = "github.com/Waylon1991/KingdomProto/common;common";

// LoginType 登录类型
enum LoginType {
    guest   = 0;  //游客登录
    UserPwd = 1;  //用户密码登录
}

// ProtocolType 协议类型
enum ProtocolType {
    ws  = 0;  // web socket
    tcp = 1;  // tcp
}

// User 用户结构体
message User {
    int32 user_id = 1;
}

// RoomMode 房间模式
enum RoomMode {
    one_vs_one     = 0;  // 1 v 1
    chaos_faction  = 1;  //大乱斗
    three_vs_three = 2;  // 3 v 3
    five_vs_five   = 3;  // 5 v 5
}

// HeroMatchState 英雄匹配中状态
enum HeroMatchState {
    free     = 0;  //空闲
    selected = 1;  //已选
    disabled = 2;  //禁用
}

// Hero 英雄
message Hero {
    int32 hero_id        = 1;
    HeroMatchState state = 2;
}

// SelectInfo 选择的信息
message SelectInfo {
    int32 user_id = 1;  //用户信息
    int32 hero_id = 2;  //英雄信息
}

//-------------------------------room--------------------------------//

// RoomCard 卡牌
message RoomCard {
    int32 id        = 1;  //卡牌id
    CardState state = 2;  //卡牌状态
}

// CardState 卡牌状态
enum CardState {
    card_enabled  = 0;  //可用
    card_disabled = 1;  //不可用
}

// RoomBuf buf
message RoomBuf {
    int32 id       = 1;  // buf id
    int32 num      = 2;  // buf 个数
    BufState state = 3;  // buf 状态
}

// BufState buf状态
enum BufState {
    buf_enabled  = 0;  //可用
    buf_disabled = 1;  //不可用
}

// skill
message RoomSkill {
    int32 id         = 1;  //技能 id
    SkillState state = 2;  //技能状态
}

// SkillState buf状态
enum SkillState {
    skill_enabled  = 0;  //可用
    skill_disabled = 1;  //不可用
}

// DiceFaceNumber 筛子数字
enum DiceFaceNumber {
    dfn_dice_null = 0;  //非法面值
    dfn_dice_1    = 1;
    dfn_dice_2    = 2;
    dfn_dice_3    = 3;
    dfn_dice_4    = 4;
    dfn_dice_5    = 5;
    dfn_dice_6    = 6;
}

// DiceFacePic 筛子图案
enum DiceFacePic {
    dfn_pic_null = 0;  //非法面值
    dfn_pic_A    = 1;
    dfn_pic_B    = 2;
    dfn_pic_C    = 3;
}

// DiceFace 筛子面
message DiceFace {
    DiceFaceNumber num = 1;
    DiceFacePic pic    = 2;
}

// RoomDice 筛子
message RoomDice {
    repeated DiceFace df = 1;  //筛子结果
}

// GameStage 游戏阶段
enum GameStage {
    gs_keep      = 0;  //维持阶段
    gs_income    = 1;  //收入阶段
    gs_main      = 2;  //主要阶段
    gs_offensive = 3;  //进攻投掷阶段
    gs_enemy     = 4;  //索敌投掷阶段
    gs_defensive = 5;  //防御阶段
    gs_finish    = 6;  //收尾阶段
}

//玩家信息
message RoomPlayerInfo {
    int32 user_id              = 1;   //玩家id
    int32 seat                 = 2;   //玩家座位号
    int32 hero_id              = 3;   //英雄id
    int32 blood                = 4;   //血量
    int32 cp                   = 5;   //战斗点数
    repeated RoomCard cards    = 6;   //手牌列表
    repeated RoomCard discards = 7;   //出牌列表
    repeated RoomBuf bufs      = 8;   // buf列表
    repeated RoomSkill skills  = 9;   //技能列表
    repeated RoomDice dices    = 10;  //骰子列表
    int32 left_card            = 11;  //剩余牌数
    int32 left_time            = 12;  //剩余时间（s）
}

//操作位置信息
message OperateSeatInfo {
    int32 round_seat = 1;  //当前回合的操作玩家seat
    GameStage stage  = 2;  //当前阶段
    int32 stage_seat = 3;  //当前阶段玩家seat
}

// OperateInfo 操作信息
message OperateInfo {
    OperateSeatInfo seat_info  = 1;  //位置信息
    repeated int32 enemy_seats = 2;  //被攻击的玩家座位号
}

// OperateKind 操作种类
enum OperateKind {
    ok_null        = 0;  //空操作
    ok_skip        = 1;  //跳过该阶段
    ok_out_card    = 2;  //打出卡牌
    ok_sell_card   = 3;  //出售卡牌
    ok_roll_dice   = 4;  //掷骰子
    ok_send_skill  = 5;  //发动技能
    ok_trigger_buf = 6;  //触发buf
}

// OperateRecord 操作记录
message OperateRecord {
    int32 index      = 1;  //操作序号
    OperateInfo info = 2;  //当前操作信息
    OperateKind kind = 3;  //操作种类
    RoomCard card    = 4;  //出的牌
    RoomSkill skill  = 5;  //技能
    RoomBuf buf      = 6;  // buf
    RoomDice dice    = 7;  //骰子
}

// RewardBall 奖励球
message RewardBall {
    int32 cur_round   = 1;  //当前回合数
    int32 total_round = 2;  //满回合数
}
